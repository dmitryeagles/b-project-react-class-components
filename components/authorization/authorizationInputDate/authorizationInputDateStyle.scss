@import '../../../style/GLOBAL';

@mixin mixin_authorizationInput($borderColor,$borderColorHover) {
  border-bottom: 2px solid $borderColor;
  &:active,
  &:focus-visible,
  &:focus {
    border-bottom-color: $borderColorHover;
  }
}

.componentContainer {
  padding-bottom: 10px;
}

.labelInput {
  font-size: $GLOBAL_fontSize;
  color: $GLOBAL_color_primary;
  padding: 10px 0 0 10px;
  font-weight: bold;
}

.authorizationInputNormal {
  @include mixin_authorizationInput($GLOBAL_borderColor, $GLOBAL_color_primary);
}

.authorizationInputError {
  @include mixin_authorizationInput($GLOBAL_color_errorOrCancelPrimary, $GLOBAL_color_errorOrCancelPrimary);
}

.errorTextContainer {
  padding-top: 5px;
  color: $GLOBAL_color_errorOrCancelPrimary;
  font-size: $GLOBAL_fontSizeHelper;
  animation: animation_errorOpacityIn 1s;
}

.authorizationInputDate {
  width: 100%;
  padding: 10px 10px 0 10px;
  border-top: none;
  border-left: none;
  border-right: none;
  font-size: $GLOBAL_fontSizeSubtitle;
  color: $GLOBAL_fontColorPrimary;
  outline: none;
  $animationTime: 0.5s;
  transition: border-bottom-color $animationTime ease-in-out;
  box-sizing: border-box;
}

.buttonClearSelectedDate {
  $closeIcoSize: 25px;
  padding: 0;
  width: $closeIcoSize;
  background-repeat: no-repeat;
  background-size: 15px 15px;
  background-position: center;

  @include GLOBAL_mixin_svgBgAsBase64('x_close.svg?fill='+GLOBAL_function_convertColorToStr($GLOBAL_borderColor));

  &:hover {
    @include GLOBAL_mixin_svgBgAsBase64('x_close.svg?fill='+ GLOBAL_function_convertColorToStr($GLOBAL_color_errorOrCancelPrimary));
  }

  &:after {
    content: none;
  }
}

:global {
  .react-datepicker-wrapper {
    width: unset;
  }

  .react-datepicker__input-container {
    max-width: 250px;
    min-width: 100px;
    width: unset;
  }

  .react-datepicker__day-names {
    @include GLOBAL_mixin_unselectableText();
  }

  .react-datepicker__current-month {
    @include GLOBAL_mixin_unselectableText();
  }

  .react-datepicker__header {
    @include GLOBAL_mixin_unselectableText();
  }
}

@keyframes animation_errorOpacityIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
